{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["web3","require","window","ethereum","App","useState","setPlayerAccount","numPlayers","setNumPlayers","useEffect","game","eth","Contract","Game","abi","a","requestAccounts","accounts","console","log","getAccounts","methods","getNumPlayers","call","then","joinGame","useCallback","className","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4zxOAIMA,EAAO,IAFAC,EAAQ,KAER,CAASC,OAAOC,UAuCdC,MArCf,WAAgB,IAAD,EAC6BC,mBAAS,MADtC,mBACSC,GADT,aAEuBD,oBAAU,GAFjC,mBAENE,EAFM,KAEMC,EAFN,KAIbC,qBAAU,WACR,IAAMC,EAAO,IAAIV,EAAKW,IAAIC,SACxBC,EAAKC,IACL,+CAGe,uCAAG,4BAAAC,EAAA,+EAGCf,EAAKW,IAAIK,kBAHV,OAGhBC,EAHgB,sDAKhBC,QAAQC,IAAR,MALgB,OASlBD,QAAQC,IAAIF,GACZX,EAAiBW,EAAS,IAVR,yDAAH,qDAYjBG,GAEAV,EAAKW,QAAQC,gBAAgBC,OAAOC,KAAKhB,KACxC,CAACA,IAEJ,IAAMiB,EAAWC,uBAAY,eAE7B,OACE,sBAAKC,UAAU,MAAf,UACE,+CAAkBpB,KAClB,wBAAQqB,QAASH,EAAjB,2BC1BSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fe681a93.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport Game from \"./contracts/Game.json\";\nconst Web3 = require(\"web3\");\n\nconst web3 = new Web3(window.ethereum);\n\nfunction App() {\n  const [playerAccount, setPlayerAccount] = useState(null);\n  const [numPlayers, setNumPlayers] = useState(-1);\n\n  useEffect(() => {\n    const game = new web3.eth.Contract(\n      Game.abi,\n      \"0x3D7e9e25449CCC13AbcaDD2CC1A4B986C8f88578\"\n    );\n\n    const getAccounts = async () => {\n      let accounts;\n      try {\n        accounts = await web3.eth.requestAccounts();\n      } catch (e) {\n        console.log(e);\n        // handle user rejecting accounts\n      }\n\n      console.log(accounts);\n      setPlayerAccount(accounts[0]);\n    };\n    getAccounts();\n\n    game.methods.getNumPlayers().call().then(setNumPlayers);\n  }, [setNumPlayers]);\n\n  const joinGame = useCallback(() => {});\n\n  return (\n    <div className=\"App\">\n      <h1>Num players: {numPlayers}</h1>\n      <button onClick={joinGame}>Join game</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}