{"version":3,"sources":["useContract.js","fireNotification.js","useContractFn.js","useInterval.js","Scores.js","ruleConfig.js","Rules.js","Proposals.js","Propose.js","Loader.js","Game.js","useGameActive.js","GameList.js","config.js","App.js","reportWebVitals.js","index.js"],"names":["useContract","web3","abi","address","useState","contract","setContract","useEffect","console","log","result","eth","Contract","fireNotification","text","type","Noty","timeout","show","parseError","error","err","message","match","useContractFn","name","options","useCallback","a","methods","send","msg","useInterval","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","Scores","players","getPlayerName","map","p","sort","p1","p2","balance","player","i","playerAddress","Web3","utils","fromWei","ruleConfig","description","unit","Majority","Quorum","Rules","rules","rule","value","Proposals","proposals","voteOnProposal","gameActive","length","proposal","index","slice","reverse","votes","filter","v","proposer","ruleIndex","complete","toString","successful","pending","some","onClick","Propose","createProposal","isPlayer","proposedRuleOption","setProposedRuleOption","proposedValue","setProposedValue","proposedValueValid","setProposedValueValid","proposedValueError","setProposedValueError","ruleOptions","label","parseInt","lowerBound","upperBound","className","onChange","option","target","disabled","classNames","Loader","Game","account","gameAddress","useParams","game","GameContract","events","setEvents","setRules","setPlayers","setProposals","receivedPastEvents","setReceivedPastEvents","setIsPlayer","joinGame","from","toWei","getArray","elements","toUpperCase","call","element","fetchVotes","Promise","all","getVotesLength","votesLength","voteIndex","getVote","vote","push","updatedProposals","proposalsWithVotes","findIndex","String","fromCharCode","charCodeAt","updateVote","newProposals","proposalIndex","updateProposal","newProposalsWithVotes","updatePlayer","newPlayers","playerIndex","updateRule","newRules","updateDataOnEvent","event","data","returnValues","mapEvent","getPastEvents","fromBlock","pastEvents","fn","subscription","allEvents","on","unsubscribe","voteOnProposalHandler","setGameActive","maxProposals","useGameActive","GameList","gamesList","newGameHandler","href","config","require","App","setWeb3","setAccount","requestAccounts","accounts","fetchAccounts","useAccount","gameFactory","GameFactoryContract","metamask","network","setupStatus","setSetupStatus","window","ethereum","net","getNetworkType","getGamesLength","games","setGamesList","newGameAddress","setNewGameAddress","newGame","NewGame","updatedGamesList","gameIndex","rel","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab20e56d.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useContract = (web3, abi, address) => {\n  const [contract, setContract] = useState(null);\n\n  useEffect(() => {\n    if (!web3) return;\n    console.log(web3);\n    const result = new web3.eth.Contract(abi, address);\n    setContract(result);\n  }, [abi, address, web3]);\n\n  return contract;\n};\n","import Noty from \"noty\";\n\nexport const fireNotification = function (text, type) {\n  new Noty({\n    text,\n    type: type || \"info\",\n    timeout: 10000,\n  }).show();\n};\n","import { useCallback } from \"react\";\nimport { fireNotification } from \"./fireNotification\";\n\nconst parseError = (error) => {\n  const err = error.message.match(\n    /VM Exception while processing transaction: revert ([\\w ]+)/\n  );\n  if (err) return err[1];\n  return \"You cancelled the transaction\";\n};\n\nexport const useContractFn = (contract, name, options) => {\n  const fn = useCallback(\n    async (...args) => {\n      try {\n        const result = await contract.methods[name](...args).send(options);\n        fireNotification(`${name} request sent`, \"warning\");\n        return result;\n      } catch (e) {\n        // TODO: show err to user in useful way\n        const msg = parseError(e);\n        fireNotification(\n          `${msg}<br><br><em>The blockchain takes a few seconds to update, so your screen may be out of date</em>`,\n          \"error\"\n        );\n        return false;\n      }\n    },\n    [contract, name, options]\n  );\n\n  return fn;\n};\n","import { useRef, useEffect } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    console.log(\"CALLBACK CHANGED\");\n    savedCallback.current = callback;\n    savedCallback.current();\n  }, [callback]);\n\n  useEffect(() => {\n    console.log(\"call now\");\n    if (savedCallback.current) savedCallback.current();\n    function tick() {\n      if (savedCallback.current) savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import Web3 from \"web3\";\n\nexport const Scores = ({ players, getPlayerName }) => {\n  return (\n    <>\n      <h2>Scores</h2>\n      <ol>\n        {players\n          .map((p) => {\n            console.log(p);\n            return p;\n          })\n          .sort((p1, p2) => p2.balance - p1.balance)\n          .map((player, i) => (\n            <li key={i}>\n              <span>\n                {getPlayerName(player.playerAddress)} -{\" \"}\n                {Web3.utils.fromWei(player.balance)} LED\n              </span>\n              <br></br>\n              <span>\n                <small>{player.playerAddress}</small>\n              </span>\n            </li>\n          ))}\n      </ol>\n    </>\n  );\n};\n","export const ruleConfig = {\n  \"Proposal reward\": {\n    name: \"Proposal reward\",\n    description:\n      \"The amount given to a player when their proposal is successful\",\n    unit: \"LED\",\n  },\n  Majority: {\n    name: \"Majority\",\n    description:\n      \"The proportion of votes required for a proposal to be enacted\",\n    unit: \"%\",\n  },\n  Quorum: {\n    name: \"Quorum\",\n    description:\n      \"The proportion of players required for a proposal to complete\",\n    unit: \"%\",\n  },\n  \"Max proposals\": {\n    name: \"Max proposals\",\n    description: \"The game ends when this many proposals have been completed\",\n    unit: \"\",\n  },\n};\n","import { ruleConfig } from \"./ruleConfig\";\n\nexport const Rules = ({ rules }) => {\n  return (\n    <>\n      <h2>Rules</h2>\n      <ul>\n        {rules\n          .map((rule) => ({ rule, ruleConfig: ruleConfig[rule[0]] }))\n          .map(({ rule, ruleConfig }, i) => (\n            <li key={i}>\n              <strong>{rule.name}</strong> {ruleConfig.description} -{\" \"}\n              {rule.value}\n              {ruleConfig.unit}\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n","export const Proposals = ({\n  rules,\n  proposals,\n  voteOnProposal,\n  getPlayerName,\n  playerAddress,\n  gameActive,\n}) => (\n  <>\n    {(!rules.length && \"LOADING...\") || (\n      <ol>\n        {!proposals.length &&\n          \"No rule changes have been proposed so far. Use the 'Create Proposal' form to start the game\"}\n        {proposals\n          .map((proposal, index) => ({ ...proposal, index }))\n          .slice()\n          .reverse()\n          .map((proposal, i) => (\n            <li key={i}>\n              {proposal.votes &&\n                proposal.votes.filter((v) => v).map(() => \"👍🏻\")}\n              {proposal.votes &&\n                proposal.votes.filter((v) => !v).map(() => \"👎\")}\n              {getPlayerName(proposal.proposer)} proposes{\" \"}\n              {rules[proposal.ruleIndex].name} should be {proposal.value}.\n              Complete: {proposal.complete.toString()}. Success:{\" \"}\n              {proposal.successful.toString()}\n              {proposal.pending && \"PENDING\"}\n              {gameActive &&\n                proposal.votes &&\n                !proposal.votes.some(\n                  ({ playerAddress: voter }) => voter !== playerAddress\n                ) &&\n                !proposal.complete &&\n                !proposal.pending && (\n                  <>\n                    <button\n                      onClick={() => voteOnProposal(proposal.index, true)}\n                    >\n                      Vote for\n                    </button>\n                    <button\n                      onClick={() => voteOnProposal(proposal.index, false)}\n                    >\n                      Vote against\n                    </button>\n                  </>\n                )}\n            </li>\n          ))}\n      </ol>\n    )}\n  </>\n);\n","import { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport classNames from \"classnames\";\n\nexport const Propose = ({ rules, createProposal, isPlayer, gameActive }) => {\n  const [proposedRuleOption, setProposedRuleOption] = useState(null);\n  const [proposedValue, setProposedValue] = useState(0);\n  const [proposedValueValid, setProposedValueValid] = useState(true);\n  const [proposedValueError, setProposedValueError] = useState(null);\n\n  const ruleOptions = rules.map((rule, i) => ({ value: i, label: rule.name }));\n\n  useEffect(() => {\n    if (!proposedRuleOption) return setProposedValueValid(true);\n    if (rules[proposedRuleOption.value].value === proposedValue) {\n      setProposedValueError(\n        \"Proposed value must be different to current value\"\n      );\n    } else {\n      setProposedValueError(null);\n    }\n    if (\n      parseInt(proposedValue) >=\n        parseInt(rules[proposedRuleOption.value].lowerBound) &&\n      parseInt(proposedValue) <=\n        parseInt(rules[proposedRuleOption.value].upperBound)\n    ) {\n      return setProposedValueValid(true);\n    }\n    return setProposedValueValid(false);\n  }, [rules, proposedValue, proposedRuleOption]);\n\n  useEffect(() => {\n    if (!proposedRuleOption) return;\n    setProposedValue(rules[proposedRuleOption.value].value);\n  }, [proposedRuleOption, rules]);\n\n  const createProposalHandler = () => {\n    const result = createProposal(proposedRuleOption.value, proposedValue);\n    if (result) {\n      setProposedValue(0);\n      setProposedRuleOption(null);\n    }\n  };\n\n  return (\n    <>\n      {(!gameActive && <div className=\"disabled-panel\">Game over</div>) ||\n        (!isPlayer && (\n          <div className=\"disabled-panel\">Join the game to make proposals</div>\n        ))}\n      <h2>Propose</h2>I propose that{\" \"}\n      <Select\n        options={ruleOptions}\n        value={proposedRuleOption}\n        onChange={(option) => setProposedRuleOption(option)}\n      ></Select>{\" \"}\n      be changed to{\" \"}\n      <input\n        onChange={({ target: { value } }) => setProposedValue(value)}\n        type=\"text\"\n        value={proposedValue}\n        disabled={!proposedRuleOption}\n      ></input>\n      <button\n        onClick={createProposalHandler}\n        disabled={\n          !proposedValueValid || !proposedRuleOption || proposedValueError\n        }\n      >\n        Create proposal\n      </button>\n      <p>{proposedValueError}</p>\n      <p className={classNames(\"input-helper\", !proposedValueValid && \"error\")}>\n        {proposedRuleOption &&\n          `${rules[proposedRuleOption.value].name} must be between ${\n            rules[proposedRuleOption.value].lowerBound\n          } and ${rules[proposedRuleOption.value].upperBound}`}\n      </p>\n    </>\n  );\n};\n","export const Loader = () => {\n  return <div>LOADING...</div>;\n};\n","import \"./App.css\";\nimport { useContract } from \"./useContract\";\nimport { useContractFn } from \"./useContractFn\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useGameActive } from \"./useGameActive\";\nimport { fireNotification } from \"./fireNotification\";\nimport useInterval from \"./useInterval\";\nimport { Scores } from \"./Scores\";\nimport { Rules } from \"./Rules\";\nimport { Proposals } from \"./Proposals\";\nimport { Propose } from \"./Propose\";\nimport { Loader } from \"./Loader\";\nimport { default as GameContract } from \"./contracts/Game.json\";\nimport Web3 from \"web3\";\nimport { useParams } from \"react-router-dom\";\n\nexport const Game = ({ web3, account }) => {\n  const { gameAddress } = useParams();\n  console.log(\"params\", useParams());\n  console.log(gameAddress);\n  const game = useContract(web3, GameContract.abi, gameAddress);\n  const [events, setEvents] = useState([]);\n  const [rules, setRules] = useState(null);\n  const [players, setPlayers] = useState(null);\n  const [proposals, setProposals] = useState(null);\n  const [receivedPastEvents, setReceivedPastEvents] = useState(false);\n  const [isPlayer, setIsPlayer] = useState(null);\n\n  useEffect(() => {\n    if (!account || !players) return;\n    const result = players.some(\n      ({ playerAddress }) => account === playerAddress\n    );\n    setIsPlayer(result);\n  }, [account, players]);\n\n  const joinGame = useContractFn(game, \"joinGame\", {\n    from: account,\n    value: Web3.utils.toWei(\"5\"),\n  });\n\n  const joinGameHandler = () => {\n    if (!account)\n      return fireNotification(\"You need to install Metamask first!\", \"warning\");\n    joinGame();\n  };\n\n  const getArray = useCallback(\n    async (name) => {\n      if (!game) {\n        return;\n      }\n      let elements = [];\n      let length = 0;\n      try {\n        length = await game.methods[\n          `get${name.slice(0, 1).toUpperCase()}${name.slice(1)}Length`\n        ]().call();\n      } catch (e) {\n        fireNotification(`Failed to get ${name}`);\n      }\n      try {\n        for (let index = 0; index < length; index++) {\n          const element = await game.methods[name](index).call();\n          elements = [...elements, element];\n        }\n        return elements;\n      } catch (e) {\n        fireNotification(`Failed to get ${name}`);\n        console.error(`Failed to get ${name}: ${e.message}`);\n      }\n    },\n    [game]\n  );\n\n  const fetchVotes = useCallback(\n    async (proposals) => {\n      const updatedProposals = await Promise.all(\n        proposals.slice().map(async (proposal, i) => {\n          const votesLength = await game.methods.getVotesLength(i).call();\n          console.log(votesLength);\n          proposal.votes = [];\n          for (let voteIndex = 0; voteIndex < votesLength; voteIndex++) {\n            const { playerAddress, vote } = game.methods\n              .getVote(i, voteIndex)\n              .call();\n            proposal.votes.push({ playerAddress, vote });\n          }\n          return proposal;\n        })\n      );\n      return updatedProposals;\n    },\n    [game]\n  );\n\n  const fetchRules = useCallback(async () => {\n    const rules = await getArray(\"rules\", setRules);\n    setRules(rules);\n  }, [getArray]);\n  useInterval(fetchRules, 10000);\n\n  const fetchProposals = useCallback(async () => {\n    const proposals = await getArray(\"proposals\", setProposals);\n    if (proposals) {\n      const proposalsWithVotes = await fetchVotes(proposals);\n      setProposals(proposalsWithVotes);\n    }\n  }, [getArray, fetchVotes]);\n  useInterval(fetchProposals, 10000);\n\n  const fetchPlayers = useCallback(async () => {\n    const players = await getArray(\"players\", setPlayers);\n    setPlayers(players);\n  }, [getArray]);\n  useInterval(fetchPlayers, 10000);\n\n  const getPlayerName = useCallback(\n    (address) => {\n      const index = players.findIndex((p) => p.playerAddress === address);\n      return `PLAYER ${String.fromCharCode(index + \"A\".charCodeAt(0))}`;\n    },\n    [players]\n  );\n\n  const updateVote = useCallback(\n    (vote) => {\n      const newProposals = proposals.slice();\n      newProposals[vote.proposalIndex].votes[vote.voteIndex] = vote;\n      setProposals(newProposals);\n    },\n    [proposals]\n  );\n\n  const updateProposal = useCallback(\n    async (proposal) => {\n      const newProposals = proposals.slice();\n      newProposals[proposal.proposalIndex] = proposal;\n      const newProposalsWithVotes = await fetchVotes(newProposals);\n      setProposals(newProposalsWithVotes);\n    },\n    [proposals, fetchVotes]\n  );\n\n  const updatePlayer = useCallback(\n    (player) => {\n      const newPlayers = players.slice();\n      newPlayers[player.playerIndex] = {\n        playerAddress: player.playerAddress,\n        balance: player.balance.toString(),\n      };\n      setPlayers(newPlayers);\n    },\n    [players]\n  );\n\n  const updateRule = useCallback(\n    (rule) => {\n      const newRules = rules.slice();\n      newRules[rule.ruleIndex].value = rule.value;\n      setRules(newRules);\n    },\n    [rules]\n  );\n\n  const updateDataOnEvent = useCallback(\n    (event) => {\n      const data = event.returnValues;\n      switch (event.event) {\n        case \"ProposalUpdate\":\n          return updateProposal(data);\n        case \"PlayerUpdate\":\n          return updatePlayer(data);\n        case \"VoteUpdate\":\n          return updateVote(data);\n        case \"RuleUpdate\":\n          return updateRule(data);\n        default:\n          return \"UNKNOWN EVENT\";\n      }\n    },\n    [updateRule, updateProposal, updatePlayer, updateVote]\n  );\n\n  // FIXME: put somewhere else not in fn\n  const mapEvent = useCallback(\n    (event) => {\n      const data = event.returnValues;\n      switch (event.event) {\n        case \"ProposalUpdate\":\n          fireNotification(\n            `New proposal created by ${getPlayerName(\n              proposals.proposer\n            )}: change <strong>${\n              rules[data.ruleIndex].name\n            }</strong> to <strong>${data.value}</strong>`,\n            \"success\"\n          );\n          return (\n            <>\n              <strong>{event.event}</strong> -{\" \"}\n              {getPlayerName(event.returnValues.proposer)} proposed to change{\" \"}\n              {rules[event.returnValues.ruleIndex].name} to{\" \"}\n              {event.returnValues.value}\n            </>\n          );\n        case \"PlayerUpdate\":\n          let msg;\n          if (players[data.playerIndex]) {\n            msg = `Player ${getPlayerName(\n              data.playerAddress\n            )} has new balance of ${Web3.utils.fromWei(data.balance)}`;\n          } else {\n            msg = `New player joined: ${getPlayerName(data.playerAddress)} (${\n              data.playerAddress\n            })`;\n          }\n          // fireNotification(msg, \"success\");\n          return msg;\n        case \"VoteUpdate\":\n          fireNotification(\n            `${getPlayerName(data.playerAddress)} voted ${\n              data ? \"yes\" : \"no\"\n            } on proposal ${data.proposalIndex}`,\n            \"success\"\n          );\n          return (\n            <>\n              <strong>{event.event}</strong> -{\" \"}\n              <strong>{getPlayerName(event.returnValues.playerAddress)}</strong>{\" \"}\n              joined the game with balance{\" \"}\n              {Web3.utils.fromWei(event.returnValues.balance)}\n            </>\n          );\n        case \"RuleUpdate\":\n          fireNotification(\n            `Rule updated: ${rules[data.ruleIndex].name} is now ${data.value}`,\n            \"success\"\n          );\n          return (\n            <>\n              <strong>{event.event}</strong> - Rule change\n            </>\n          );\n        default:\n          return \"UNKNOWN EVENT\";\n      }\n    },\n    [rules, getPlayerName, proposals, players]\n  );\n\n  useEffect(() => {\n    const fn = async () => {\n      if (receivedPastEvents) return;\n      if (!game || !rules || !players || !proposals) return;\n      setReceivedPastEvents(true);\n      const pastEvents = await game.getPastEvents(\"allEvents\", {\n        fromBlock: \"earliest\",\n      });\n      setEvents([...pastEvents.reverse().map(mapEvent), ...events]);\n    };\n    fn();\n  }, [game, rules, players, proposals, events, mapEvent, receivedPastEvents]);\n\n  useEffect(() => {\n    if (!game || !rules || !players || !proposals) return;\n    const subscription = game.events.allEvents().on(\"data\", (data) => {\n      setEvents([...events, mapEvent(data)]);\n      updateDataOnEvent(data);\n    });\n\n    return () =>\n      subscription.unsubscribe((err) => {\n        if (err) console.error(err);\n      });\n  }, [game, players, proposals, rules, events, mapEvent, updateDataOnEvent]);\n\n  const voteOnProposal = useContractFn(game, \"voteOnProposal\", {\n    from: account,\n  });\n  const voteOnProposalHandler = async (proposalIndex, vote) => {\n    const result = await voteOnProposal(proposalIndex, vote);\n    if (result) {\n      const updatedProposals = proposals.slice();\n      updatedProposals[proposalIndex].pending = true;\n      setProposals(updatedProposals);\n    }\n  };\n\n  const createProposal = useContractFn(game, \"createProposal\", {\n    from: account,\n  });\n\n  const gameActive = useGameActive(proposals, rules);\n\n  return (\n    <>\n      <div className=\"panel\">\n        {(!gameActive && \"This game has ended\") ||\n          (isPlayer &&\n            `You are playing\n      this game`) || (\n            <div>\n              <button onClick={joinGameHandler}>Join game</button>\n            </div>\n          )}\n      </div>\n\n      <div className=\"container\">\n        <div className=\"rules panel\">\n          <div className=\"subpanel rules\">\n            {(rules && <Rules rules={rules}></Rules>) || <Loader></Loader>}\n          </div>\n        </div>\n        <div className=\"proposals panel\">\n          {(rules && proposals && (\n            <Proposals\n              proposals={proposals}\n              rules={rules}\n              getPlayerName={getPlayerName}\n              voteOnProposal={voteOnProposalHandler}\n              gameActive={gameActive}\n            ></Proposals>\n          )) || <Loader></Loader>}\n        </div>\n        <div className=\"panel scores\">\n          {(players && (\n            <Scores players={players} getPlayerName={getPlayerName}></Scores>\n          )) || <Loader></Loader>}\n          <h2>Event log</h2>\n          <ul>\n            {events\n              .slice()\n              .reverse()\n              .map((event) => (\n                <li>{event}</li>\n              ))}\n          </ul>\n        </div>\n      </div>\n\n      <div>\n        <div className=\"propose panel\">\n          {(rules && (\n            <Propose\n              rules={rules}\n              createProposal={createProposal}\n              isPlayer={isPlayer}\n              gameActive={gameActive}\n            ></Propose>\n          )) || <Loader></Loader>}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useGameActive = (proposals, rules) => {\n  const [gameActive, setGameActive] = useState(true);\n\n  useEffect(() => {\n    if (!rules || !proposals || !rules.length) return;\n    const maxProposals = rules[3].value; // TODO: find a better way to identify correct rule\n    setGameActive(\n      proposals.filter((proposal) => proposal.complete).length < maxProposals\n    );\n  }, [proposals, rules]);\n\n  return gameActive;\n};\n","export const GameList = ({ gamesList, newGameHandler }) => {\n  return (\n    <>\n      <div>\n        <button onClick={newGameHandler}>New game</button>\n      </div>\n      {(!gamesList && \"Loading...\") || (\n        <ol>\n          {gamesList.map((game) => (\n            <li>\n              <a href={game}>{game}</a>\n            </li>\n          ))}\n        </ol>\n      )}\n    </>\n  );\n};\n","export const config = { gameFactoryContract: { address: \"0x2F165A01E18255395E5131683ebe0dEeD8FfcD22\" } };","import { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\nimport \"noty/lib/noty.css\";\nimport \"noty/lib/themes/mint.css\";\nimport { Game } from \"./Game\";\nimport { GameList } from \"./GameList\";\nimport { fireNotification } from \"./fireNotification\";\nimport { useContract } from \"./useContract\";\nimport { default as GameFactoryContract } from \"./contracts/GameFactory.json\";\nimport { config } from \"./config\";\nimport { useContractFn } from \"./useContractFn\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  Redirect,\n} from \"react-router-dom\";\n\nconst Web3 = require(\"web3\");\n\nconst useAccount = (web3) => {\n  const [account, setAccount] = useState(null);\n\n  useEffect(() => {\n    if (!web3) return;\n    async function fetchAccounts() {\n      try {\n        const accounts = await web3.eth.requestAccounts();\n        setAccount(accounts[0]);\n      } catch (e) {\n        console.error(`Failed getting accounts`);\n      }\n    }\n    fetchAccounts();\n  }, [web3]);\n  return account;\n};\n\nfunction App() {\n  const [web3, setWeb3] = useState(null);\n  const account = useAccount(web3);\n  const gameFactory = useContract(\n    web3,\n    GameFactoryContract.abi,\n    config.gameFactoryContract.address\n  );\n\n  const [setupStatus, setSetupStatus] = useState({\n    metamask: false,\n    network: false,\n  });\n\n  useEffect(() => {\n    const fn = async () => {\n      // TODO: check if metamask installed\n      if (!window.ethereum)\n        return setSetupStatus({ metamask: false, network: false });\n      const web3 = new Web3(window.ethereum);\n      const network = await web3.eth.net.getNetworkType();\n      if (network !== \"private\")\n        return setSetupStatus({ metamask: true, network: false });\n      setSetupStatus({ metamask: true, network: true });\n      setWeb3(web3);\n    };\n    fn();\n  }, []);\n\n  const getArray = useCallback(\n    async (name) => {\n      if (!gameFactory) {\n        return;\n      }\n      let elements = [];\n      let length = 0;\n      try {\n        console.log(gameFactory.methods);\n        length = await gameFactory.methods.getGamesLength().call();\n      } catch (e) {\n        fireNotification(`Failed to get ${name}`);\n        console.error(`Failed to get ${name} 1: ${e.message}`);\n      }\n      try {\n        for (let index = 0; index < length; index++) {\n          const element = await gameFactory.methods.games(index).call();\n          elements = [...elements, element];\n        }\n        return elements;\n      } catch (e) {\n        fireNotification(`Failed to get ${name}`);\n        console.error(`Failed to get ${name} 2: ${e.message}`);\n      }\n    },\n    [gameFactory]\n  );\n\n  const [gamesList, setGamesList] = useState(null);\n  const [gameAddress, setGameAddress] = useState(null);\n  const [newGameAddress, setNewGameAddress] = useState(false);\n\n  useEffect(() => {\n    const fn = async () => {\n      if (!gameFactory) return;\n      const gamesList = await getArray(\"games\");\n      setGamesList(gamesList);\n    };\n    fn();\n  }, [gameFactory, web3, getArray]);\n\n  const newGame = useContractFn(gameFactory, \"newGame\", { from: account });\n  const newGameHandler = async () => {\n    const newGameAddress = await newGame();\n    console.log(\"new game\", newGameAddress);\n    setNewGameAddress(newGameAddress);\n  };\n\n  useEffect(() => {\n    if (!gameFactory) return;\n    const subscription = gameFactory.events.NewGame().on(\"data\", (data) => {\n      fireNotification(\"New game created\", \"success\");\n      const updatedGamesList = gamesList.slice();\n      updatedGamesList[data.returnValues.gameIndex] =\n        data.returnValues.gameAddress;\n      console.log(data);\n      setGamesList(updatedGamesList);\n    });\n\n    return () =>\n      subscription.unsubscribe((err) => {\n        if (err) console.error(err);\n      });\n  }, [gameAddress, gameFactory, gamesList]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"panel intro\">\n        <h1>Ledgernomix</h1>\n        <h2>The game where you make the rules</h2>\n        <div className=\"buttons\">\n          <div>About</div>\n          <div>GAME NAME</div>\n          <div>How to play</div>\n        </div>\n        {!setupStatus.metamask && (\n          <div>\n            <a\n              className=\"button\"\n              target=\"_blank\"\n              href=\"https://metamask.io/download.html\"\n              rel=\"noreferrer\"\n            >\n              Install Metamask browser extension\n            </a>\n          </div>\n        )}\n        {!setupStatus.network && \"Wrong network\"}\n      </div>\n      <Router>\n        <Switch>\n          <Route path=\"/:gameAddress\">\n            <Game web3={web3} account={account}></Game>\n          </Route>\n          <Route path=\"/\">\n            {newGameAddress && <Redirect to=\"/\" />}\n            <div className=\"panel\">\n              <GameList\n                gamesList={gamesList}\n                newGameHandler={newGameHandler}\n              ></GameList>\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}